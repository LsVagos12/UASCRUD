/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

/**
 *
 * @author user
 */
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FrmData extends javax.swing.JFrame {

  
    public Statement st;
    public ResultSet rs;
    Connection cn = koneksi.KoneksiDatabase.BukaKoneksi();  
    
    
    public FrmData() {
        initComponents();
        TampilData();
    }
    
    private void Bersih () {
        txtNIK.setText("");
        txtNAMA.setText("");
        txtTLP.setText("");
        txtALM.setText("");
        
        btnSPN.setText("Simpan");
        txtNIK.setEditable(true);
        
    }
    
    private  void CariData() {
        try {
            st = cn.createStatement();
            rs = st.executeQuery("SELECT * FROM biodata WHERE " + cmbCARI.getSelectedItem().toString() + " LIKE '%" + txtCARI.getText() + "%'" );
            
            DefaultTableModel model = new DefaultTableModel();
            
            model.addColumn("No.");
            model.addColumn("NIK");
            model.addColumn("Nama");
            model.addColumn("Telepon");
            model.addColumn("Alamat");
            
            int no = 1;
            
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);
            
            while (rs.next()) {
                Object[] data = {
                    no ++,
                   rs.getString("NIK"),
                   rs.getString("Nama"),
                   rs.getString("Telepon"),
                   rs.getString("Alamat"),
                };
                
                model.addRow(data);
                tblDATA.setModel(model);
                
                
            }
            
        } catch (Exception e) {
        }
    
    
            }
    
    private void TampilData() {
        try {
            st = cn.createStatement();
            rs = st.executeQuery("SELECT * FROM biodata");
            
            DefaultTableModel model = new DefaultTableModel();
            
            model.addColumn("No.");
            model.addColumn("NIK");
            model.addColumn("Nama");
            model.addColumn("Telepon");
            model.addColumn("Alamat");
            
            int no = 1;
            
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);
            
            while (rs.next()) {
                Object[] data = {
                    no ++,
                   rs.getString("NIK"),
                   rs.getString("Nama"),
                   rs.getString("Telepon"),
                   rs.getString("Alamat"),
                };
                
                model.addRow(data);
                tblDATA.setModel(model);
                
                
            }
            
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNIK = new javax.swing.JTextField();
        txtNAMA = new javax.swing.JTextField();
        txtTLP = new javax.swing.JTextField();
        txtALM = new javax.swing.JTextField();
        btnSPN = new javax.swing.JButton();
        txtHPS = new javax.swing.JButton();
        txtBTL = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDATA = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        cmbCARI = new javax.swing.JComboBox<>();
        txtCARI = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("NIK");

        jLabel2.setText("Nama Lengkap ");

        jLabel3.setText("Telepon");

        jLabel4.setText("Alamat");

        btnSPN.setText("Simpan");
        btnSPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSPNActionPerformed(evt);
            }
        });

        txtHPS.setText("Hapus");
        txtHPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHPSActionPerformed(evt);
            }
        });

        txtBTL.setText("Batal");
        txtBTL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBTLActionPerformed(evt);
            }
        });

        tblDATA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NIK", "Nama", "Telepon", "Alamat"
            }
        ));
        tblDATA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDATAMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDATA);

        jLabel5.setText("Cari Data");

        cmbCARI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NIK", "nama", "telepon", "alamat" }));

        txtCARI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCARIKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSPN)
                                .addGap(18, 18, 18)
                                .addComponent(txtHPS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                .addComponent(txtBTL))
                            .addComponent(txtNIK)
                            .addComponent(txtNAMA)
                            .addComponent(txtTLP)
                            .addComponent(txtALM)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cmbCARI, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCARI, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtNIK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNAMA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTLP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtALM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSPN)
                    .addComponent(txtHPS)
                    .addComponent(txtBTL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbCARI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCARI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSPNActionPerformed
            // TODO add your handling code here:
        try {
            st = cn.createStatement();
            if (txtNIK.getText().equals("") || txtNAMA.getText().equals("") || txtTLP.getText().equals("") || txtALM.getText().equals("") ) {
                JOptionPane.showMessageDialog(null, "Data tidak boleh kosong", "Validasi Data", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            if (btnSPN.getText() == "Simpan") { 
                String cek = "SELECT * FROM biodata WHERE NIK = '" + txtNIK.getText() + "'";
                rs = st.executeQuery(cek);
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "Ups... NIK INI SUDAH ADA");                  
                }else {
                    String sql = "INSERT INTO biodata VALUES ('" + txtNIK.getText() + "','" + txtNAMA.getText() + "','" + txtTLP.getText() + "','" + txtALM.getText()+ "')";     
                    st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "DATA BERHAHSIL DISIMPAN");
                    Bersih(); 
                }
                        
            } else {
                
                String update = "UPDATE biodata SET nama = '" + txtNAMA.getText() + "', Telepon = '" + txtTLP.getText() + "', Alamat = '" + txtALM.getText() + "' WHERE NIK = '" + txtNIK.getText() + "'";
                st.executeUpdate(update);
                JOptionPane.showMessageDialog(null, "DATA BERHAHSIL DISIMPAN");
                Bersih(); 
                TampilData();
            }
                
          
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
                   
        }
    }//GEN-LAST:event_btnSPNActionPerformed

    private void txtHPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHPSActionPerformed
        // TODO add your handling code here:
        
        if (txtNIK.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Silahkan pilih Data yg akan dihapus! ");
            
            
        }else {
            int jawab = JOptionPane.showConfirmDialog(null, "Data ini ahkahn dihahpus, Lanjutkan?", "KONFIRMAI", JOptionPane.YES_NO_OPTION );
            if (jawab == 0 ){
                try {
                    st = cn.createStatement();
                    String sql = "DELETE FROM biodata WHERE NIK = '" + txtNIK.getText() + "'";
                    st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
                    Bersih();
                    TampilData();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
        
    }//GEN-LAST:event_txtHPSActionPerformed

    private void tblDATAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDATAMouseClicked

        txtNIK.setText(tblDATA.getValueAt(tblDATA.getSelectedRow(), 1).toString());
        txtNAMA.setText(tblDATA.getValueAt(tblDATA.getSelectedRow(), 1).toString());
        txtTLP.setText(tblDATA.getValueAt(tblDATA.getSelectedRow(), 1).toString());
        txtALM.setText(tblDATA.getValueAt(tblDATA.getSelectedRow(), 1).toString());
        
        txtNIK.setEditable(false);
        btnSPN.setText("Ubah");
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDATAMouseClicked

    private void txtBTLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBTLActionPerformed
        // TODO add your handling code here:
        
        Bersih();
        
        
    }//GEN-LAST:event_txtBTLActionPerformed

    private void txtCARIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCARIKeyPressed
        // TODO add your handling code here:
        
        CariData();
        
    }//GEN-LAST:event_txtCARIKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSPN;
    private javax.swing.JComboBox<String> cmbCARI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDATA;
    private javax.swing.JTextField txtALM;
    private javax.swing.JButton txtBTL;
    private javax.swing.JTextField txtCARI;
    private javax.swing.JButton txtHPS;
    private javax.swing.JTextField txtNAMA;
    private javax.swing.JTextField txtNIK;
    private javax.swing.JTextField txtTLP;
    // End of variables declaration//GEN-END:variables

    private static class Resultset {

        public Resultset() {
        }
    }
}
